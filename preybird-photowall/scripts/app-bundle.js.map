{"version":3,"sources":["C:/code/photowall/preybird-photowall/preybird-photowall/src/resources/elements/flickr-window.interface.js","C:/code/photowall/preybird-photowall/preybird-photowall/src/resources/elements/image.interface.js","resources/elements/flickr-image.ts","C:/code/photowall/preybird-photowall/preybird-photowall/src/resources/configuration/clientConfig.interface.js","resources/configuration/httpClientConfig.ts","C:/code/photowall/preybird-photowall/preybird-photowall/src/resources/services/flickrService.interface.js","resources/services/flickrPublicSearchService.ts","app.ts","environment.ts","main.ts","resources/index.ts","resources/configuration/fetchClientConfig.ts","resources/services/flickrPhotosSearchService.ts","styles/_keyframes.scss","styles/image.scss","styles/_fonts.scss","styles/_grid.scss","styles/main.scss"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":[null,null,"import { Image } from \"./image.interface\"\r\n\r\nexport class FlickrImage implements Image {   \r\n    linkBig: string;\r\n\r\n    constructor (public link: string, public title: string) {\r\n        this.linkBig = link;\r\n    }\r\n}",null,"import { autoinject } from 'aurelia-framework';\r\n\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { ClientConfig } from './clientConfig.interface';\r\n\r\n@autoinject\r\nexport class HttpClientConfig implements ClientConfig {\r\n    httpClient: HttpClient;\r\n\r\n    constructor(httpClient: HttpClient) { \r\n         this.httpClient = httpClient;\r\n    }\r\n\r\n    get(options: any) {\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(options.baseUrl)\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        console.log(`Requesting ${request.baseUrl} ${request.url}`);\r\n                        return request;\r\n                    },\r\n                    response(response) {\r\n                        console.log(`Received ${response.statusCode} ${response.statusText}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n\r\n        return this.httpClient;\r\n    }\r\n}\r\n",null,"import { autoinject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\n\r\nimport { HttpClientConfig } from '../configuration/httpClientConfig';\r\nimport { FlickrService } from './flickrService.interface';\r\nimport { FlickrImage } from '../elements/flickr-image';\r\n\r\n@autoinject\r\nexport class FlickrPublicSearchService implements FlickrService {\r\n    baseUrl = \"https://api.flickr.com/services/feeds/photos_public.gne/?format=json&nojsoncallback=0&tags=\";\r\n    httpClient: HttpClient;\r\n\r\n    constructor(private httpClientConfig: HttpClientConfig) {\r\n        this.httpClient = httpClientConfig.get({\r\n            baseUrl: this.baseUrl\r\n        });\r\n    }\r\n\r\n    async search(text: string) {\r\n        // TODO: replace whitespace with comma, for tags, massage\r\n        // TODO: format method (base)\r\n        let urlTags = text.split(' ').join(',');\r\n        console.log(text,urlTags);\r\n\r\n\r\n        try {\r\n            let response = await this.httpClient.jsonp(urlTags, 'jsonp')\r\n            return;\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handle(imageData): FlickrImage[] {\r\n        let items = imageData.items;\r\n        let images: FlickrImage[] = [];\r\n\r\n        for (let i of items) {\r\n            images.push(new FlickrImage(i.media.m, i.title))\r\n        }\r\n        return images;\r\n    }\r\n}\r\n\r\n","import { autoinject } from 'aurelia-framework';\r\n\r\nimport { FlickrWindow } from './resources/elements/flickr-window.interface';\r\nimport { FlickrImage } from './resources/elements/flickr-image';\r\nimport { FlickrPublicSearchService } from './resources/services/flickrPublicSearchService';\r\n\r\n@autoinject\r\nexport class App {\r\n  images: FlickrImage[] = [];\r\n  searchText = '';\r\n  title = 'My Photo Wall';\r\n  window = <FlickrWindow>window;\r\n\r\n  constructor(private flickrService: FlickrPublicSearchService) {\r\n    this.window.jsonFlickrFeed = (data) => {\r\n      this.images = this.flickrService.handle(data)\r\n    }\r\n  }\r\n\r\n  async search() {\r\n    if (this.searchText) {\r\n      this.flickrService.search(this.searchText);\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.searchText = '';\r\n    this.images = [];\r\n  }\r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n","import { HttpClient } from 'aurelia-fetch-client';\r\nimport { ClientConfig } from './clientConfig.interface';\r\nimport { autoinject } from 'aurelia-framework';\r\n\r\n@autoinject\r\nexport class HttpClientConfig implements ClientConfig {\r\n    httpClient: HttpClient;\r\n\r\n    constructor(httpClient: HttpClient) {\r\n        this.httpClient = httpClient;\r\n    }\r\n\r\n    get(options: any) {\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(options.baseUrl)\r\n                .withDefaults({\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        console.log(`Requesting ${request.method} ${request.url}`);\r\n                        return request;\r\n                    },\r\n                    response(response) {\r\n                        console.log(`Received ${response.status} ${response.url}`);\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n\r\n        return this.httpClient;\r\n    }\r\n}","import { autoinject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\n\r\nimport { HttpClientConfig } from '../configuration/fetchClientConfig';\r\nimport { FlickrService } from './flickrService.interface';\r\nimport { FlickrImage } from '../elements/flickr-image';\r\n\r\n@autoinject\r\nexport class FlickrPhotosSearchService implements FlickrService {\r\n    baseUrl = \"https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=108af4c065183c8377da15b6eeedd94a&format=json&nojsoncallback=1&text=\";\r\n    httpClient: HttpClient;\r\n\r\n    constructor(private httpClientConfig: HttpClientConfig) {\r\n        this.httpClient = httpClientConfig.get({\r\n            baseUrl: this.baseUrl\r\n        });\r\n    }\r\n\r\n    async search(text: string) {\r\n        try {\r\n            var fetchOptions = {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                cache: 'default'\r\n            };\r\n\r\n            let response = await this.httpClient.fetch(text, fetchOptions);\r\n            let data = await response.json();\r\n            console.log(data);\r\n\r\n            return;\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handle(imageData): FlickrImage[] {\r\n        throw new Error(\"Not implemented\");\r\n    }\r\n}","@keyframes fadein {\r\n    from { opacity: 0; }\r\n    to   { opacity: 1; }\r\n}\r\n\r\n@keyframes shake {\r\n  10%, 90% {\r\n    transform: translate3d(-1px, 0, 0);\r\n  }\r\n  \r\n  20%, 80% {\r\n    transform: translate3d(2px, 0, 0);\r\n  }\r\n\r\n  30%, 50%, 70% {\r\n    transform: translate3d(-4px, 0, 0);\r\n  }\r\n\r\n  40%, 60% {\r\n    transform: translate3d(4px, 0, 0);\r\n  }\r\n}","@import './keyframes';\r\n@import 'screen';\r\n\r\n$small-image: 175px;\r\n$medium-image: 250px;\r\n$large-image: 300px;\r\n\r\nflickr-image {\r\n    display: block;\r\n    text-align: center;\r\n}\r\n\r\npicture {\r\n    animation: fadein ease-in 1s;\r\n}\r\n\r\nimg {\r\n    height: $small-image;\r\n    width: $small-image;\r\n    max-width: $small-image;\r\n\r\n    border: 5px solid white;\r\n    box-shadow: 0px 0px 2px black;\r\n}\r\n\r\nh5 {\r\n    margin-top: 0;\r\n    text-align: center;\r\n}\r\n\r\n@media screen and (min-width: $medium-size) {\r\n    img {\r\n        height: $medium-image;\r\n        width: $medium-image;        \r\n        max-width: $medium-image;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: $small-size) {\r\n    img {\r\n        height: $medium-image;\r\n        width: $medium-image;\r\n        max-width: $medium-image\r\n    }\r\n}\r\n","@import url('https://fonts.googleapis.com/css?family=Open+Sans|Pacifico');\r\n\r\n$font-pacifico: 'Pacifico', cursive;\r\n$font-opensans: 'Open Sans', sans-serif;\r\n\r\n$primary-font-family: $font-pacifico;\r\n$secondary-font-family: $font-opensans;\r\n\r\n$heading-font-color: mediumvioletred;\r\n$primary-font-color: darkgray;\r\n","@import 'screen';\r\n\r\n.flex {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-flow: wrap;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n\r\n    & .col {\r\n        width: 32%;\r\n        padding: 20px;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: $small-size) {\r\n    .flex {\r\n        display: block;\r\n\r\n        .col {\r\n            width: 100%;\r\n            margin: 0 0 10px 0;\r\n        }\r\n    }\r\n}","@import './fonts';\r\n@import './grid';\r\n@import './keyframes';\r\n\r\n// TODO: Autoprefix\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  padding: 20px;\r\n}\r\n\r\nbody, input {\r\n    font-family: $secondary-font-family;\r\n    color: $primary-font-color;     \r\n}\r\n\r\nh1 {\r\n    animation: shake 1s;\r\n\r\n    font-family: $primary-font-family;\r\n    color: $heading-font-color; \r\n    text-align: center;\r\n}\r\n\r\nform.search {    \r\n    text-align: center;\r\n        \r\n    input, button {\r\n        border-radius: 3px;\r\n    }    \r\n\r\n    input {        \r\n        width: 150px;\r\n        border: 2px solid lightgray;\r\n    }\r\n\r\n    button {\r\n        margin-left: 5px;        \r\n        border: 2px solid darkgray;\r\n\r\n        font-family: $secondary-font-family;\r\n        font-weight: bold;\r\n\r\n        width: 70px;\r\n\r\n        animation: shake 1s;\r\n        animation-delay: 1s;\r\n\r\n    }\r\n}"],"sourceRoot":"../src"}